# This file was *autogenerated* from the file moduleE.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)

def mEp1(x, y):

	sum = _sage_const_0 
	for i in range(len(x)):
		sum += (x[i] - y[i])**_sage_const_2 
	return sqrt(sum)

def mEp2(x, y):

	sum = _sage_const_0 
	for i in range(len(x)):
		sum += abs(x[i] - y[i])
	return sum


def mEp3(x, y):

	sum = _sage_const_0 
	for i in range(len(x)):
		if x[i] != y[i]:
			sum += _sage_const_1 
	return sum

def lev(x, lenx, y, leny):
	if lenx == _sage_const_0 : 
		return leny
	if leny == _sage_const_0 : 
		return lenx

	if x[lenx - _sage_const_1 ] == y[leny - _sage_const_1 ]: 
		cost = _sage_const_0 
	else: 
		cost = _sage_const_1 

	return min( lev(x, lenx - _sage_const_1 , y, leny) + _sage_const_1 ,\
		        lev(x, lenx, y, leny - _sage_const_1 ) + _sage_const_1 ,\
		        lev(x, lenx - _sage_const_1  , y, leny - _sage_const_1 ) + cost  \
		      )

def mEp4(x, y):

	return lev(x, len(x), y, len(y))


x = vector([_sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_0 ])
y = vector([_sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 ])
ans = mEp4(x, y)
print ans
